import { AllSeriesType } from '../models/seriesType';
export declare function defaultizeColor(series: AllSeriesType, seriesIndex: number, colors?: string[]): {
    data: {
        color: string;
        label?: string | ((location: "tooltip" | "legend" | "arc") => string);
        value: number;
        id?: import("../models/seriesType").PieItemId | undefined;
    }[];
    type: "pie";
    innerRadius?: number | string;
    outerRadius?: number | string;
    arcLabelRadius?: number | string;
    cornerRadius?: number;
    startAngle?: number;
    endAngle?: number;
    paddingAngle?: number;
    sortingValues?: import("../models/seriesType").ChartsPieSorting;
    arcLabel?: "formattedValue" | "label" | "value" | ((item: Omit<import("../models/seriesType").DefaultizedPieValueType, "label"> & {
        label?: string;
    }) => string);
    arcLabelMinAngle?: number;
    cx?: number | string;
    cy?: number | string;
    highlighted?: {
        additionalRadius?: number;
        innerRadius?: number;
        outerRadius?: number;
        cornerRadius?: number;
        paddingAngle?: number;
        arcLabelRadius?: number;
        color?: string;
    };
    faded?: {
        additionalRadius?: number;
        innerRadius?: number;
        outerRadius?: number;
        cornerRadius?: number;
        paddingAngle?: number;
        arcLabelRadius?: number;
        color?: string;
    };
    id?: import(".").SeriesId;
    color?: string;
    valueFormatter?: import(".").SeriesValueFormatter<import(".").MakeOptional<import("../models/seriesType").PieValueType, "id">> | undefined;
    highlightScope?: Partial<import("..").HighlightScope>;
} | {
    type: "bar";
    data?: (number | null)[];
    dataKey?: string;
    label?: string | ((location: "tooltip" | "legend") => string);
    layout?: "horizontal" | "vertical";
    stackOffset?: import("..").StackOffsetType;
    id?: import(".").SeriesId;
    color: string;
    valueFormatter?: import(".").SeriesValueFormatter<number | null> | undefined;
    highlightScope?: Partial<import("..").HighlightScope>;
    xAxisKey?: string;
    yAxisKey?: string;
    stack?: string;
    stackOrder?: import("..").StackOrderType;
} | {
    type: "line";
    data?: (number | null)[];
    dataKey?: string;
    stack?: string;
    area?: boolean;
    label?: string | ((location: "tooltip" | "legend") => string);
    curve?: import("../models/seriesType").CurveType;
    showMark?: boolean | ((params: import("../models/seriesType").ShowMarkParams) => boolean);
    disableHighlight?: boolean;
    connectNulls?: boolean;
    stackOffset?: import("..").StackOffsetType;
    id?: import(".").SeriesId;
    color: string;
    valueFormatter?: import(".").SeriesValueFormatter<number | null> | undefined;
    highlightScope?: Partial<import("..").HighlightScope>;
    xAxisKey?: string;
    yAxisKey?: string;
    stackOrder?: import("..").StackOrderType;
} | {
    type: "scatter";
    data: import("../models/seriesType").ScatterValueType[];
    markerSize?: number;
    label?: string | ((location: "tooltip" | "legend") => string);
    disableHover?: boolean;
    zAxisKey?: string;
    id?: import(".").SeriesId;
    color: string;
    valueFormatter?: import(".").SeriesValueFormatter<import("../models/seriesType").ScatterValueType> | undefined;
    highlightScope?: Partial<import("..").HighlightScope>;
    xAxisKey?: string;
    yAxisKey?: string;
};
