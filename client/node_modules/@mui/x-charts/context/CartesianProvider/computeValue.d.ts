import { AxisConfig, ScaleName } from '../../models';
import { ChartsXAxisProps, ChartsAxisProps, ChartsYAxisProps } from '../../models/axis';
import { CartesianChartSeriesType, ExtremumGetter } from '../../models/seriesType/config';
import { DefaultizedAxisConfig } from './CartesianContext';
import { DrawingArea } from '../DrawingProvider';
import { FormattedSeries } from '../SeriesContextProvider';
import { MakeOptional } from '../../models/helpers';
export declare function computeValue(drawingArea: DrawingArea, formattedSeries: FormattedSeries, axis: MakeOptional<AxisConfig<ScaleName, any, ChartsYAxisProps>, 'id'>[] | undefined, extremumGetters: {
    [K in CartesianChartSeriesType]?: ExtremumGetter<K>;
}, axisName: 'y', zoomRange?: [number, number]): {
    axis: DefaultizedAxisConfig<ChartsYAxisProps>;
    axisIds: string[];
};
export declare function computeValue(drawingArea: DrawingArea, formattedSeries: FormattedSeries, inAxis: MakeOptional<AxisConfig<ScaleName, any, ChartsXAxisProps>, 'id'>[] | undefined, extremumGetters: {
    [K in CartesianChartSeriesType]?: ExtremumGetter<K>;
}, axisName: 'x', zoomRange?: [number, number]): {
    axis: DefaultizedAxisConfig<ChartsAxisProps>;
    axisIds: string[];
};
