import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _extends from "@babel/runtime/helpers/esm/extends";
const _excluded = ["style", "maskId"];
import * as React from 'react';
import { animated } from '@react-spring/web';
import { getRadius } from './getRadius';
import { jsx as _jsx } from "react/jsx-runtime";
const buildInset = corners => `inset(0px round ${corners.topLeft}px ${corners.topRight}px ${corners.bottomRight}px ${corners.bottomLeft}px)`;
function BarClipRect(props) {
  const radiusData = props.ownerState;
  return /*#__PURE__*/_jsx(animated.rect, {
    style: _extends({}, props.style, {
      clipPath: (props.ownerState.layout === 'vertical' ? props.style?.height : props.style?.width).to(value => buildInset({
        topLeft: Math.min(value, getRadius('top-left', radiusData)),
        topRight: Math.min(value, getRadius('top-right', radiusData)),
        bottomRight: Math.min(value, getRadius('bottom-right', radiusData)),
        bottomLeft: Math.min(value, getRadius('bottom-left', radiusData))
      }))
    })
  });
}
/**
 * @ignore - internal component.
 */
function BarClipPath(props) {
  const {
      style,
      maskId
    } = props,
    rest = _objectWithoutPropertiesLoose(props, _excluded);
  if (!props.borderRadius || props.borderRadius <= 0) {
    return null;
  }
  return /*#__PURE__*/_jsx("clipPath", {
    id: maskId,
    children: /*#__PURE__*/_jsx(BarClipRect, {
      ownerState: rest,
      style: style
    })
  });
}
export { BarClipPath };