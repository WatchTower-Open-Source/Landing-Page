import * as React from 'react';
import { DrawingProviderProps } from '../context/DrawingProvider';
import { SeriesContextProviderProps } from '../context/SeriesContextProvider';
import { ChartsSurfaceProps } from '../ChartsSurface';
import { CartesianContextProviderProps } from '../context/CartesianProvider';
import { HighlightedProviderProps, ZAxisContextProviderProps } from '../context';
import { ChartsPluginType } from '../models/plugin';
import { ChartSeriesType } from '../models/seriesType/config';
export type ChartContainerProps = Omit<ChartsSurfaceProps & Omit<SeriesContextProviderProps, 'seriesFormatters'> & Omit<DrawingProviderProps, 'svgRef'> & Omit<CartesianContextProviderProps, 'xExtremumGetters' | 'yExtremumGetters'> & ZAxisContextProviderProps & HighlightedProviderProps, 'children'> & {
    children?: React.ReactNode;
    /**
     * An array of plugins defining how to preprocess data.
     * If not provided, the container supports line, bar, scatter and pie charts.
     */
    plugins?: ChartsPluginType<ChartSeriesType>[];
};
declare const ChartContainer: React.ForwardRefExoticComponent<Omit<ChartsSurfaceProps & Omit<SeriesContextProviderProps, "seriesFormatters"> & Omit<DrawingProviderProps, "svgRef"> & Omit<CartesianContextProviderProps, "xExtremumGetters" | "yExtremumGetters"> & ZAxisContextProviderProps & HighlightedProviderProps, "children"> & {
    children?: React.ReactNode;
    /**
     * An array of plugins defining how to preprocess data.
     * If not provided, the container supports line, bar, scatter and pie charts.
     */
    plugins?: ChartsPluginType<ChartSeriesType>[];
} & React.RefAttributes<unknown>>;
export { ChartContainer };
